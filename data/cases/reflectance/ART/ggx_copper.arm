// Tests based on the measured data from https://www.cs.cornell.edu/~srm/publications/EGSR07-btdf.pdf

// Number of samples can be fairly low as increased sampling does not create new innacuracies (nor makes them more visible)
#ifndef SAMPLES
#define SAMPLES 64
#endif

/* 4 different scenes for the rotations by 80, 70, 60 and 50 degrees of the material plane
    Different viewing angles provide different reflectance distributions:
        smaller angle of rotation -> smaller angle of illumination -> more direct light -> brighly illuminated plane
    The affects should be mostly observed right around the direct light reflection */
#ifndef ROTATE
#define ROTATE -70
#endif

#import "../../../common/ART/square.arm"

ARM_MAIN_FUNCTION(ggx_copper)
{
    /* Material plane
		Basic geometry (rectangle) that easily demonstrates different viewing/incident angles */
    id materialPlane =
    	// 0.2 roughness should create a really rough surface so that the distortion of reflected light and tails are clearly visible
        // As the light is white, innacuracies are nicely visible on more colorful materials such as copper or gold
        [ createSquare(art_gv,SUPPLY_MATERIAL(TORRANCE_SPARROW_SURFACE(GGX_MICROFACET_DISTRIBUTION_CONST(0.2)), (COPPER_MATERIAL))) apply
            : ROT_Y(ROTATE DEGREES)
            ];

    id floor = 
        [ createSquare(art_gv,LAMBERT_REFLECTOR(CONST_COLOUR_GREY(0.5))) apply
            : USCALE(10)
            : TRANSLATION_X(1.0)
            ];

    /* Area light - CIE D65 illuminant
		Provides isolated illumination from above the plane */
    id areaLight =
        [ createSquare(art_gv,LAMBERT_EMITTER(CIE_ILLUMINANT_D65,4.0)) apply
            : USCALE(0.5)
            : TRANSLATION_X(-1.5) 
            ];

    id scene_geometry =
        UNION(materialPlane,
            floor,
            areaLight,
            UNION_END
            );

    id camera =
        [ CAMERA
            imageSize: IVEC2D(512,512)
            ray:       RAY3D(PNT3D(-1.0,0.0,-4.0),VEC3D(1.0,0.0,4.0))
            zoom:      1.155
            ];
    
    id actionsquence =
        ACTION_SEQUENCE(
            CREATE_STANDARD_RAYCASTING_ACCELERATION_STRUCTURE,

            [ LIGHTSOURCE_COLLECTOR
                sampler2D:   STANDARD_SAMPLER_2D
                resolution:  5
                type:        arlightsourcetype_area
            ],
            
            [ STOCHASTIC_PIXEL_SAMPLER
                sampleProvider:
                    [ PATHTRACER
                        rayCaster:        STANDARD_RAYCASTER
                        maximalRecursion: 20
                        ]
                sampleSplattingKernel: TENT_KERNEL
                samplesPerPixel:       SAMPLES
                randomValueGeneration: RANDOM_SEQUENCE
                ],

            [ IMAGECONVERSION_ARTRAW_TO_ARTCSP
                    removeSource:    NO
                ],

            [ IMAGECONVERSION_ARTCSP_TO_EXR
                    removeSource:    YES
                ],
                
            ACTION_SEQUENCE_END
            );

    return
        [ SCENE
            sceneGeometry:  scene_geometry
            camera:         camera
            actionSequence: actionsquence
            ];
}
