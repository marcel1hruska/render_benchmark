// 2 variants with polarizing filter rotated 90 and 0 degrees
#ifndef ROTATION
#define ROTATION 0
#endif

// Due to area light sampling, number of samples needs to be slightly higher
#ifndef SAMPLES
#define SAMPLES 128
#endif

// method to create simple rectangle with given material
ArObj createSquare(ART_GV * art_gv, id material) {
    Pnt3D * points = ALLOC_ARRAY(Pnt3D,5);
    points[0] = PNT3D(0.0,1.0,-1.0);
    points[1] = PNT3D(0.0,1.0,1.0);
    points[2] = PNT3D(0.0,-1.0,1.0);
    points[3] = PNT3D(0.0,-1.0,-1.0);
    points[4] = PNT3D_HUGE;

    ArObj vertices = arnvertexset(
        art_gv,
        points,
        NULL,
        NULL,
        NULL,
        NULL
        );

    ArObj square = QUADRANGLE(0,1,2,3);
    
    return [ square apply
                : vertices
                : material 
                ];
};

ARM_MAIN_FUNCTION(polarizing_plane)
{
    /* Plane dielectric, rotated by 33.33 degrees to have exactly 56.67 (Brewster's angle)
        for the reflections from the area light source above it */
    ArObj plane = 
        [ createSquare(art_gv,SUPPLY_MATERIAL(SMOOTH_FRESNEL_SURFACE,STANDARD_MATERIAL(
                // Simplified glass IOR to have easier calculation of the Brewster's angle
                CONST_COLOUR_GRAY(1.52),
                CONST_COLOUR_GRAY(0.0)
                ))) apply
                : ROT_Y(-33.33 DEGREES)
                ];

    // Simple diffuse floor, just for 3D notion of the scene   
    ArObj floor = 
        [ createSquare(art_gv,LAMBERT_MATERIAL( MACBETH_LIGHTSKIN )) apply
                : USCALE(20)
                : TRANSLATION_X(1.0)
                ];

    // Area light directly above the glass plane
    ArObj areaLight =
        [ createSquare(art_gv,LAMBERT_EMITTER(CIE_ILLUMINANT_D65, 4.0)) apply
            : TRANSLATION_X(-2.0)
            ];

    id sceneGeometry = UNION( plane, floor, areaLight, UNION_END );

    // Perspective camera looking directly at the plane at 56.67 degrees
    id camera = 
        [ CAMERA
            imageSize: IVEC2D( 512, 512 )
            ray:       RAY3D(PNT3D(0,0,-6),VEC3D(0,0,6))
            zoom:      1.155
        ];

    id actionSequence = 
        ACTION_SEQUENCE(
            CREATE_STANDARD_RAYCASTING_ACCELERATION_STRUCTURE,

            [ LIGHTSOURCE_COLLECTOR
                sampler2D:   STANDARD_SAMPLER_2D
                resolution:  5
                type:        arlightsourcetype_area
            ],

            [ STOCHASTIC_PIXEL_SAMPLER
                sampleProvider:
                    [ PATHTRACER
                        rayCaster:        STANDARD_RAYCASTER
			            maximalRecursion: 20
                    ]
                sampleSplattingKernel: TENT_KERNEL
                samplesPerPixel:       SAMPLES
                randomValueGeneration: PSEUDORANDOM_SEQUENCE
            ],

            /* The whole point of this scene is that with the polarizer unrotated (theta=0 degrees)
            The polarization waves reflected from the plane at Brewster's angle oscillate 
            perpandicularly to the polarizer, which renders the reflection of the light source
            invisible. With polarizer rotated by 90 degrees, the light source is fully visible
            as the oscillation is in the same direction */
            [ LINEAR_POLARISATION_FILTER
                    angle   :   ROTATION+90 DEGREES
                    strength:   1.0
                    ],

            [ IMAGECONVERSION_ARTRAW_TO_ARTCSP
                removeSource: NO
            ],

            [ IMAGECONVERSION_ARTCSP_TO_EXR
                removeSource:    YES
                ],
            
            ACTION_SEQUENCE_END 
            );

    id result =
        [ SCENE
            sceneGeometry: sceneGeometry
            camera:		camera
            actionSequence: actionSequence
        ];

    return result;
}
